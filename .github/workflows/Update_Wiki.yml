name: Update Wiki
      
on:
  workflow_dispatch:
    inputs:
      destinationHubEnv:
        description: Select destination hubEnv
        required: true
        type: choice
        options:
          - 'EMEA_TEST'
          - 'EMEA_INT'
          - 'EMEA_E2E'
          - 'EMEA_PROD'
          - 'US_E2E'
          - 'US_PROD'
          - 'CN_E2E'
          - 'CN_PROD'
      currentVersion:
            type: string
            description: 'Enter the Current Version'
            required: true
      previousVersion:
              type: string
              description: 'Enter the Previous Version'
              required: true
      crqNumber:
        type: string
        description: 'Enter the CRQ number'
        required: true

jobs:
  update-wiki:
    runs-on: ubuntu-latest
    env: 
      API_TOKEN_GITHUB: ${{ secrets.API_TOKEN }}
      HUB_ENV: ${{github.event.inputs.destinationHubEnv}}
      CURRENT_VERSION: ${{github.event.inputs.currentVersion}}
      PREVIOUS_VERSION: ${{github.event.inputs.previousVersion}}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Clone Wiki Repository
        run: |
          git config --global user.email "michal.solarek@outlook.com"
          git config --global user.name "Michal Solarek"
          git clone https://x-access-token:${{ env.API_TOKEN_GITHUB }}@github.com/solarekm/test_repo.wiki.git

      - name: Get Current Date
        id: current-date
        run: echo "CURRENT_DATE=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV

      - name: Update Wiki File
        run: |
          # Nazwa pliku Markdown
          FILE="test_repo.wiki/Home.md"

          # Funkcja do dodawania danych do tabeli dla wybranego HUB_STAGE
          update_table() {
              local hub_stage="${{ env.HUB_ENV }}"
              local current_version="${{ env.CURRENT_VERSION }}"
              local previous_version="${{ env.PREVIOUS_VERSION }}"

              # Znajdź linię zawierającą HUB_STAGE i zaktualizuj wartości
              sed -i "/^| $hub_stage /{s|[^|]*| $current_version |3; s|[^|]*| $previous_version |5}" $FILE
          }

          # Sprawdzenie, czy plik istnieje i inicjalizacja nagłówków, jeśli to konieczne
          if [ ! -f "$FILE" ]; then
              echo "## Deployed Versions:" > $FILE
              echo "| Hub_Stage | Current version | Previous version |" >> $FILE
              echo "|------------|-----------------|------------------|" >> $FILE
              echo "| EMEA_E2E   |  |  |" >> $FILE
              echo "| EMEA_PROD  |  |  |" >> $FILE
              echo "| US_E2E     |  |  |" >> $FILE
              echo "| US_PROD    |  |  |" >> $FILE
              echo "| CN_E2E     |  |  |" >> $FILE
              echo "| CN_PROD    |  |  |" >> $FILE
          fi

          # Zaktualizuj tabelę dla wybranej opcji
          update_table "$hub_stage" "$current_version" "$previous_version"
          
      - name: Commit and Push Changes to Wiki
        run: |
          cd test_repo.wiki
          git add .
          git commit -m "Update Wiki"
          git push
